-- Drop existing tables and recreate with enhanced structure
-- This will delete all existing data, so run with caution

-- Drop dependent tables first
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS favorites CASCADE;
DROP TABLE IF EXISTS trading_journals CASCADE;

-- Drop the brokers table
DROP TABLE IF EXISTS brokers CASCADE;

-- Create enhanced brokers table with all fields from Broker interface
CREATE TABLE brokers (
  -- Basic info
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT NOT NULL,
  logo_url TEXT,
  website_url TEXT,
  score DECIMAL(3,2) DEFAULT 0 CHECK (score >= 0 AND score <= 10),
  founding_year INTEGER,
  headquarters TEXT,
  description TEXT,
  summary TEXT,
  pros TEXT[] DEFAULT '{}',
  cons TEXT[] DEFAULT '{}',
  restricted_countries TEXT[] DEFAULT '{}',

  -- Core info
  core_info JSONB DEFAULT '{}',

  -- Account types (array of account type objects)
  account_types JSONB DEFAULT '[]',

  -- Detailed fees structure
  fees JSONB DEFAULT '{}',

  -- Tradable instruments
  tradable_instruments JSONB DEFAULT '{}',

  -- Trading conditions extended
  trading_conditions_extended JSONB DEFAULT '{}',

  -- Deposit/withdrawal info
  deposit_withdrawal JSONB DEFAULT '{}',

  -- Promotions
  promotions JSONB DEFAULT '{}',

  -- Customer support
  customer_support JSONB DEFAULT '{}',

  -- Security
  security JSONB DEFAULT '{}',

  -- Trading environment
  trading_environment JSONB DEFAULT '{}',

  -- Platform features
  platform_features JSONB DEFAULT '{}',

  -- Account management
  account_management JSONB DEFAULT '{}',

  -- Transparency
  transparency JSONB DEFAULT '{}',

  -- Legacy fields for backward compatibility
  regulation JSONB DEFAULT '{}',
  ratings JSONB DEFAULT '{}',
  accessibility JSONB DEFAULT '{}',
  technology JSONB DEFAULT '{}',
  trading_conditions JSONB DEFAULT '{}',
  copy_trading BOOLEAN DEFAULT FALSE,
  is_islamic BOOLEAN DEFAULT FALSE,
  provides_signals BOOLEAN DEFAULT FALSE,
  social_trading JSONB DEFAULT '{}',

  -- Risk profile (for scam detection)
  risk_profile JSONB DEFAULT '{}',

  -- Timestamps
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create reviews table (updated to match Review interface)
CREATE TABLE reviews (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  broker_id BIGINT REFERENCES brokers(id) ON DELETE CASCADE,
  user_id UUID,
  user_name TEXT NOT NULL,
  rating DECIMAL(2,1) NOT NULL CHECK (rating >= 1 AND rating <= 5),
  comment TEXT NOT NULL,
  date TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  verified BOOLEAN DEFAULT FALSE,
  withdrawal_experience JSONB DEFAULT '{}', -- {days: number, method: string}
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create favorites table
CREATE TABLE favorites (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID,
  broker_id BIGINT REFERENCES brokers(id) ON DELETE CASCADE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  UNIQUE(user_id, broker_id)
);

-- Create trading journals table (updated to match TradingJournalEntry interface)
CREATE TABLE trading_journals (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID,
  broker_id BIGINT REFERENCES brokers(id) ON DELETE CASCADE,
  date TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  instrument TEXT NOT NULL,
  direction TEXT NOT NULL CHECK (direction IN ('Buy', 'Sell')),
  entry_price DECIMAL(15,5) NOT NULL,
  exit_price DECIMAL(15,5),
  lot_size DECIMAL(15,2) NOT NULL,
  strategy_used TEXT,
  notes TEXT,
  profit_or_loss DECIMAL(15,2),
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create indexes for better performance
CREATE INDEX idx_brokers_score ON brokers(score DESC);
CREATE INDEX idx_brokers_name ON brokers(name);
CREATE INDEX idx_brokers_broker_type ON brokers((core_info->>'brokerType'));
CREATE INDEX idx_reviews_broker_id ON reviews(broker_id);
CREATE INDEX idx_reviews_user_id ON reviews(user_id);
CREATE INDEX idx_reviews_rating ON reviews(rating DESC);
CREATE INDEX idx_favorites_user_id ON favorites(user_id);
CREATE INDEX idx_trading_journals_user_id ON trading_journals(user_id);
CREATE INDEX idx_trading_journals_broker_id ON trading_journals(broker_id);
CREATE INDEX idx_trading_journals_date ON trading_journals(date DESC);

-- Enable Row Level Security (RLS)
ALTER TABLE brokers ENABLE ROW LEVEL SECURITY;
ALTER TABLE reviews ENABLE ROW LEVEL SECURITY;
ALTER TABLE favorites ENABLE ROW LEVEL SECURITY;
ALTER TABLE trading_journals ENABLE ROW LEVEL SECURITY;

-- RLS policies
-- Anyone can view brokers
CREATE POLICY "Brokers are viewable by everyone" ON brokers
  FOR SELECT USING (true);

-- Anyone can view reviews
CREATE POLICY "Reviews are viewable by everyone" ON reviews
  FOR SELECT USING (true);

-- Authenticated users can create reviews
CREATE POLICY "Authenticated users can create reviews" ON reviews
  FOR INSERT WITH CHECK (auth.uid()::text = user_id OR user_id IS NULL);

-- Users can update their own reviews
CREATE POLICY "Users can update own reviews" ON reviews
  FOR UPDATE USING (auth.uid()::text = user_id);

-- Users can delete their own reviews
CREATE POLICY "Users can delete own reviews" ON reviews
  FOR DELETE USING (auth.uid()::text = user_id);

-- Users can view their own favorites
CREATE POLICY "Users can view own favorites" ON favorites
  FOR SELECT USING (auth.uid()::text = user_id);

-- Users can create their own favorites
CREATE POLICY "Users can create own favorites" ON favorites
  FOR INSERT WITH CHECK (auth.uid()::text = user_id);

-- Users can delete their own favorites
CREATE POLICY "Users can delete own favorites" ON favorites
  FOR DELETE USING (auth.uid()::text = user_id);

-- Users can view their own trading journals
CREATE POLICY "Users can view own trading journals" ON trading_journals
  FOR SELECT USING (auth.uid()::text = user_id);

-- Users can create their own trading journals
CREATE POLICY "Users can create own trading journals" ON trading_journals
  FOR INSERT WITH CHECK (auth.uid()::text = user_id);

-- Users can update their own trading journals
CREATE POLICY "Users can update own trading journals" ON trading_journals
  FOR UPDATE USING (auth.uid()::text = user_id);

-- Users can delete their own trading journals
CREATE POLICY "Users can delete own trading journals" ON trading_journals
  FOR DELETE USING (auth.uid()::text = user_id);

-- Function to update updated_at timestamp
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ language 'plpgsql';

-- Triggers for updated_at
CREATE TRIGGER update_brokers_updated_at BEFORE UPDATE ON brokers
  FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_reviews_updated_at BEFORE UPDATE ON reviews
  FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_trading_journals_updated_at BEFORE UPDATE ON trading_journals
  FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- Comments for documentation
COMMENT ON TABLE brokers IS 'Enhanced broker information table with comprehensive trading and regulatory data';
COMMENT ON COLUMN brokers.core_info IS 'Basic broker information: brokerType, mobileTrading, demoAccount';
COMMENT ON COLUMN brokers.account_types IS 'Array of account type objects with ECN/STP/Standard details';
COMMENT ON COLUMN brokers.fees IS 'Detailed fee structure for trading and non-trading fees';
COMMENT ON COLUMN brokers.tradable_instruments IS 'Available trading instruments: forex, commodities, indices, stocks, crypto';
COMMENT ON COLUMN brokers.trading_conditions_extended IS 'Extended trading conditions: minTradeSize, scalping, hedging, etc.';
COMMENT ON COLUMN brokers.deposit_withdrawal IS 'Deposit and withdrawal methods, fees, and processing times';
COMMENT ON COLUMN brokers.promotions IS 'Current promotions: welcome bonus, deposit bonus, loyalty programs';
COMMENT ON COLUMN brokers.customer_support IS 'Support information: languages, channels, hours';
COMMENT ON COLUMN brokers.security IS 'Security and regulatory information';
COMMENT ON COLUMN brokers.trading_environment IS 'Trading environment details: execution speed, slippage, order types';
COMMENT ON COLUMN brokers.platform_features IS 'Platform capabilities: charting, automated trading, copy trading';
COMMENT ON COLUMN brokers.account_management IS 'Account management features: Islamic accounts, base currencies, MAM/PAMM';
COMMENT ON COLUMN brokers.transparency IS 'Transparency information: auditing, years in business, client base';
COMMENT ON COLUMN brokers.risk_profile IS 'Risk assessment data for scam detection';